<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
              http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">


	<!-- Enable auto-wiring -->
	<context:annotation-config />

	<!-- The @Configuration class that creates a SecurityFilterChain -->
	<bean id="mySecurityConfig" class="testapp.SecurityConfiguration" />

	<!-- With this http element the SecurityFilterChain created by the SecurityConfiguration 
		above is not present in the FilterChainProxy and the resources that it is supposed to protect are accessible.
		 -->
		 <!-- Comment the following element to see that the SecurityFilterChain created in the Java config is now added to the FilterChainProxy -->
	<security:http pattern="/page/**" security="none"/>
</beans>
